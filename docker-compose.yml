services:
  ### APP ###
  fastapi:
    container_name: fastapi
    build:
      context: ./backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:80"
    networks:
      - common
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - mongodb
    restart: unless-stopped
  
  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend
    command: celery -A backend worker --pool=solo --loglevel=INFO
    networks:
      - common
    healthcheck:
      test: ["CMD-SHELL", "celery -A backend inspect ping --destination celery@backend"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      fastapi:
        condition: service_healthy
      redis:
    restart: unless-stopped

  ### DATABASES ###
  mongodb:
    container_name: mongodb
    image: mongo:8.0.14-rc1-noble
    volumes:
      - mongo-data:/data/db
    networks:
      - common
    ports:
      - "27017:27017"
    env_file:
      - ./.env
    restart: unless-stopped

  # Just a cool looking web interface for MongoDB
  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - common
    restart: unless-stopped

volumes:
  mongo-data:

networks:
  common:
    driver: bridge
